@model WypożyczalniaSamochodówPremium.Models.Samochod
@{
    ViewBag.Title = "Samochody";
    Layout = "~/Areas/Adm/Views/Shared/_LayoutScript.cshtml";
}



<div class="container-fluid">
    <div class="animated fadeIn">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header">
                    <i class="fa fa-car"></i> Dodaj samochód
                </div>
                @{Html.EnableClientValidation();}
                @using (Html.BeginForm("Create", "Samochod", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="card-body">
                        @Html.ValidationSummary(true)
                        <div class="form-horizontal">
                            <h4>Samochód</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row form-group line">
                                @Html.LabelFor(model => model.Marka, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    <form id="myForm">
                                        <select class="form-control" id="markiDropdown" name="markiDropdown"></select>
                                    </form>
                                    @Html.ValidationMessageFor(model => model.Marka)
                                </div>
                            </div>

                            <div class="row form-group line">
                                @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.Model, new { @class = "form-control" })

                                    @Html.ValidationMessageFor(model => model.Model)
                                </div>
                            </div>

                            <div class="row form-group line">
                                @Html.LabelFor(model => model.Wersja, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.Wersja, new { @class = "form-control" })

                                    @Html.ValidationMessageFor(model => model.Wersja)
                                </div>
                            </div>

                            <div class="row form-group line">
                                @Html.LabelFor(model => model.RokProdukcji, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.RokProdukcji, new { @class = "form-control" })                                 
                                    @Html.ValidationMessageFor(model => model.RokProdukcji)
                                </div>
                            </div>

                            <div class="row form-group line">
                                @Html.LabelFor(model => model.RodzajSilnika, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.DropDownList("RodzajSilnika", (IEnumerable<SelectListItem>)ViewData["RodzajSilnika"], string.Empty, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RodzajSilnika)
                                </div>
                            </div>

                            <div class="row form-group line">
                                @Html.LabelFor(model => model.PojemnoscSilnika, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.PojemnoscSilnika, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PojemnoscSilnika)
                                </div>
                            </div>

                            <div class="row form-group line">
                                @Html.LabelFor(model => model.SkrzyniaBiegow, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.DropDownList("SkrzyniaBiegow", (IEnumerable<SelectListItem>)ViewData["SkrzyniaBiegow"], string.Empty, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SkrzyniaBiegow)
                                </div>
                            </div>

                            <div class="row form-group line">
                                @Html.LabelFor(model => model.LiczbaDrzwi, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.DropDownList("LiczbaDrzwi", (IEnumerable<SelectListItem>)ViewData["LiczbaDrzwi"], string.Empty, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.LiczbaDrzwi)
                                </div>
                            </div>

                            <div class="row form-group line">
                                @Html.LabelFor(model => model.Kolor, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.Kolor, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Kolor)
                                </div>
                            </div>

                            <div class="row form-group line">
                                @Html.LabelFor(model => model.Przebieg, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.Przebieg, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Przebieg)
                                </div>
                            </div>



                        </div>
                    </div>
                    <div class="card-footer">
                        <input type="submit" value="Dodaj" class="btn btn-primary" /> &nbsp; @Html.ActionLink("Wróć do listy", "Index", null, new { @class = "btn btn-secondary" })
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
            type: "GET",
            url: "/Samochod/PopulateMarkiDropdown",
            data: "{}",
            success: function (data) {
                var s = '<option value="-1">Proszę wybrać markę</option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i] + '">' + data[i] + '</option>';
                }
                $("#markiDropdown").html(s);
            }
        });
    });
    @*$('#Marka').change(function () {
                var selectedMarka = $("#Marka").val();
                var modeleSelect = $('#Model');
                modeleSelect.empty();
        if (selectedMarka != null && selectedMarka != '') {
                    $.getJSON('@Url.Action("GetRegions")', { marka: selectedMarka }, function (modele) {
                        if (modele != null && !jQuery.isEmptyObject(modele))
                        {
                            regionsSelect.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                            $.each(models, function (index, region) {
                                regionsSelect.append($('<option/>', {
                                    value: region.Value,
                                    text: region.Text
                                }));
                            });
                        };
                    });
                }
            });*@
</script>