@model WypożyczalniaSamochodówPremium.Models.SamochodVM
@using WypożyczalniaSamochodówPremium.Helpers
@{
    ViewBag.Title = "Samochody";
    Layout = "~/Areas/Adm/Views/Shared/_LayoutScript.cshtml";
}


<div class="container-fluid mt-5">
    <div class="animated fadeIn">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header">
                    <i class="fa fa-car"></i> Edytuj samochód
                </div>
                @{Html.EnableClientValidation();}
                @using (Html.BeginForm("Edit", "Samochod", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="card-body">
                        <div id="autaBazaLoading" style="display:none; text-align:center; position:relative;">
                            <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
                        </div>
                        @Html.ValidationSummary(true)
                        <div class="form-horizontal">
                            <h4>Samochód</h4>
                            <hr />

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.Marka, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(model => model.Samochod.Marka, Model.ListaMarki, new { @class = "form-control", @id = "Marka" })                   
                                    @Html.ValidationMessageFor(model => model.Samochod.Marka, "", new { @class = "text-danger" })
                                </div>
                                <a data-toggle="modal" data-remote="@Url.Action("Create", "AutaBaza", null)" href="#" data-target="#modal"><i class="fa fa-plus-circle"></i> Dodaj</a>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(model => model.Samochod.Model, Model.ListaModele, new { @class = "form-control", @id = "Model"})
                                    @Html.ValidationMessageFor(model => model.Samochod.Model, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.Wersja, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Samochod.Wersja, new { @class = "form-control" })

                                    @Html.ValidationMessageFor(model => model.Samochod.Wersja)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.RokProdukcji, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Samochod.RokProdukcji, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Samochod.RokProdukcji)
                                   
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.RodzajSilnika, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownList("RodzajSilnika", (IEnumerable<SelectListItem>)ViewData["RodzajSilnika"], new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Samochod.RodzajSilnika)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.PojemnoscSilnika, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Samochod.PojemnoscSilnika, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Samochod.PojemnoscSilnika)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.SkrzyniaBiegow, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownList("SkrzyniaBiegow", (IEnumerable<SelectListItem>)ViewData["SkrzyniaBiegow"],  new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Samochod.SkrzyniaBiegow)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.LiczbaDrzwi, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownList("LiczbaDrzwi", (IEnumerable<SelectListItem>)ViewData["LiczbaDrzwi"],  new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Samochod.LiczbaDrzwi)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.Kolor, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Samochod.Kolor, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Samochod.Kolor)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Samochod.Przebieg, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Samochod.Przebieg, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Samochod.Przebieg)
                                </div>
                            </div>



                        </div>
                    </div>
                    <div class="card-footer">
                        <input type="submit" value="Zapisz" class="btn btn-primary" /> &nbsp; @Html.ActionLink("Wróć do listy", "Index", null, new { @class = "btn btn-secondary" })
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal in" id="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>

<script type="text/javascript">

    $('#modal').on('show.bs.modal', function (e) {

        var button = $(e.relatedTarget);
        var modal = $(this);

        // load content from HTML string
        //modal.find('.modal-body').html("Nice modal body baby...");

        // or, load content from value of data-remote url
        modal.find('.modal-content').load(button.data("remote"));

    });
    function HideModal() {

        $('#modal').modal('hide');
        $(document.body).on('hidden.bs.modal', function () {
            $('#modal').removeData('bs.modal')
        });
        $('#modal').data('modal', null);
    }

    $(document.body).on('hidden.bs.modal', function () {
        $('#modal').removeData('bs.modal')
    });

    //$(document).ready(function () {
    //    $.ajax({
    //        type: "GET",
    //        url: "/Samochod/PopulateMarkiDropdown",
    //        data: "{}",
    //        success: function (data) {
    //            var s = '<option value="-1">Proszę wybrać markę</option>';
    //            for (var i = 0; i < data.length; i++) {
    //                s += '<option value="' + data[i] + '">' + data[i] + '</option>';
    //            }
    //            $("#markiDropdown").html(s);
    //        }
    //    });
    //});

    $('#Marka').change(function () {
                var selectedMarka = $("#Marka").val();
                var modeleSelect = $('#Model');
                modeleSelect.empty();
        if (selectedMarka != null && selectedMarka != '') {
                    $.getJSON('@Url.Action("PopulateModeleDropdown")', { marka: selectedMarka }, function (modele) {
                        if (modele != null && !jQuery.isEmptyObject(modele))
                        {
                            modeleSelect.append($('<option/>', {
                                value: "",
                                text: ""
                            }));
                            $.each(modele, function (index, model) {
                                modeleSelect.append($('<option/>', {
                                    value: model.Value,
                                    text: model.Text
                                }));
                            });
                        };
                    });
                }
            });
</script>